"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Default = exports.default = void 0;

var _BreadCrumb = require("./BreadCrumb");

var _default = {
  title: 'Tjikko/BreadCrumb',
  component: _BreadCrumb.BreadCrumb,
  argTypes: {
    styles: {
      control: {
        type: "select",
        options: ["fixed", "responsive"]
      }
    }
  },
  parameters: {
    componentSubtitle: 'The BreadCrumb'
  }
};
exports.default = _default;

var Template = args => /*#__PURE__*/React.createElement(_BreadCrumb.BreadCrumb, args);

var Default = Template.bind({});
exports.Default = Default;
Default.args = {
  styles: "fixed",
  crumblist: [{
    name: "breadcrumb",
    url: "/bread1"
  }, {
    name: "breadcrumb",
    url: "/bread2"
  }, {
    name: "breadcrumb",
    url: "/bread3"
  }]
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2NvbXBvbmVudHMvYnJlYWRjcnVtYi9CcmVhZENydW1iLnN0b3JpZXMudHN4Il0sIm5hbWVzIjpbInRpdGxlIiwiY29tcG9uZW50IiwiQnJlYWRDcnVtYiIsImFyZ1R5cGVzIiwic3R5bGVzIiwiY29udHJvbCIsInR5cGUiLCJvcHRpb25zIiwicGFyYW1ldGVycyIsImNvbXBvbmVudFN1YnRpdGxlIiwiVGVtcGxhdGUiLCJhcmdzIiwiRGVmYXVsdCIsImJpbmQiLCJjcnVtYmxpc3QiLCJuYW1lIiwidXJsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O2VBR2U7QUFDYkEsRUFBQUEsS0FBSyxFQUFFLG1CQURNO0FBRWJDLEVBQUFBLFNBQVMsRUFBRUMsc0JBRkU7QUFHYkMsRUFBQUEsUUFBUSxFQUFFO0FBQ1JDLElBQUFBLE1BQU0sRUFBRTtBQUFFQyxNQUFBQSxPQUFPLEVBQUU7QUFBRUMsUUFBQUEsSUFBSSxFQUFFLFFBQVI7QUFBa0JDLFFBQUFBLE9BQU8sRUFBRSxDQUFDLE9BQUQsRUFBVSxZQUFWO0FBQTNCO0FBQVg7QUFEQSxHQUhHO0FBTWJDLEVBQUFBLFVBQVUsRUFBRTtBQUNWQyxJQUFBQSxpQkFBaUIsRUFBRTtBQURUO0FBTkMsQzs7O0FBV2YsSUFBTUMsUUFBZ0MsR0FBSUMsSUFBRCxpQkFBVSxvQkFBQyxzQkFBRCxFQUFnQkEsSUFBaEIsQ0FBbkQ7O0FBRU8sSUFBTUMsT0FBTyxHQUFHRixRQUFRLENBQUNHLElBQVQsQ0FBYyxFQUFkLENBQWhCOztBQUNQRCxPQUFPLENBQUNELElBQVIsR0FBZTtBQUNiUCxFQUFBQSxNQUFNLEVBQUUsT0FESztBQUViVSxFQUFBQSxTQUFTLEVBQUUsQ0FDVDtBQUNFQyxJQUFBQSxJQUFJLEVBQUUsWUFEUjtBQUVFQyxJQUFBQSxHQUFHLEVBQUU7QUFGUCxHQURTLEVBS1Q7QUFDRUQsSUFBQUEsSUFBSSxFQUFFLFlBRFI7QUFFRUMsSUFBQUEsR0FBRyxFQUFFO0FBRlAsR0FMUyxFQVNUO0FBQ0VELElBQUFBLElBQUksRUFBRSxZQURSO0FBRUVDLElBQUFBLEdBQUcsRUFBRTtBQUZQLEdBVFM7QUFGRSxDQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnJlYWRDcnVtYiwgQnJlYWRDcnVtYlByb3BzIH0gZnJvbSBcIi4vQnJlYWRDcnVtYlwiXG5pbXBvcnQgeyBTdG9yeSwgTWV0YSB9IGZyb20gJ0BzdG9yeWJvb2svcmVhY3QvdHlwZXMtNi0wJ1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRpdGxlOiAnVGppa2tvL0JyZWFkQ3J1bWInLFxuICBjb21wb25lbnQ6IEJyZWFkQ3J1bWIsXG4gIGFyZ1R5cGVzOiB7XG4gICAgc3R5bGVzOiB7IGNvbnRyb2w6IHsgdHlwZTogXCJzZWxlY3RcIiwgb3B0aW9uczogW1wiZml4ZWRcIiwgXCJyZXNwb25zaXZlXCJdIH19LFxuICB9LFxuICBwYXJhbWV0ZXJzOiB7XG4gICAgY29tcG9uZW50U3VidGl0bGU6ICdUaGUgQnJlYWRDcnVtYidcbiAgfVxufSBhcyBNZXRhXG5cbmNvbnN0IFRlbXBsYXRlOiBTdG9yeTxCcmVhZENydW1iUHJvcHM+ID0gKGFyZ3MpID0+IDxCcmVhZENydW1iIHsuLi5hcmdzfSAvPlxuXG5leHBvcnQgY29uc3QgRGVmYXVsdCA9IFRlbXBsYXRlLmJpbmQoe30pXG5EZWZhdWx0LmFyZ3MgPSB7XG4gIHN0eWxlczogXCJmaXhlZFwiLFxuICBjcnVtYmxpc3Q6IFtcbiAgICB7XG4gICAgICBuYW1lOiBcImJyZWFkY3J1bWJcIixcbiAgICAgIHVybDogXCIvYnJlYWQxXCJcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6IFwiYnJlYWRjcnVtYlwiLFxuICAgICAgdXJsOiBcIi9icmVhZDJcIlxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogXCJicmVhZGNydW1iXCIsXG4gICAgICB1cmw6IFwiL2JyZWFkM1wiXG4gICAgfVxuICBdXG59XG4iXX0=