"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ListNav = void 0;

var _react = _interopRequireDefault(require("react"));

var _PopUpNavItem = require("./PopUpNavItem");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Primary UI component for user interaction
 */
var ListNav = _ref => {
  var {
    styles = "elevated",
    linkList = []
  } = _ref;
  linkList = linkList === null || linkList === undefined ? [] : linkList;
  var classes = ['rounded-lg', 'bg-gray-50', 'dark:bg-transparent', 'px-3', 'py-2.5', 'w-max'];

  if (styles === 'elevated') {
    classes.push('shadow-lg');
  }

  if (linkList.length > 1) {
    switch (styles) {
      case 'elevated':
        classes.push('flex');
        break;

      case 'flat':
        classes.push('grid', 'grid-cols-2');

      default:
        break;
    }
  }

  return /*#__PURE__*/_react.default.createElement("div", {
    className: classes.join(' '),
    style: {
      width: 'fit-content'
    }
  }, linkList.map((menu, index) => {
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "m-1.5 w-max",
      key: index
    }, linkList.length > 1 && /*#__PURE__*/_react.default.createElement("div", {
      className: "font-semibold text-sm leading-5 uppercase px-3 py-2.5 dark:text-gray-100 text-gray-800"
    }, menu.groupCaption), menu.groups.map((menuItem, subIndex) => {
      return /*#__PURE__*/_react.default.createElement(_PopUpNavItem.PopUpNavItem, {
        caption: menuItem.name,
        type: menuItem.type ? menuItem.type : "default",
        key: subIndex,
        className: "px-3 py-2.5",
        href: menuItem.url
      });
    }));
  }));
};

exports.ListNav = ListNav;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2NvbXBvbmVudHMvbmF2L0xpc3ROYXYudHN4Il0sIm5hbWVzIjpbIkxpc3ROYXYiLCJzdHlsZXMiLCJsaW5rTGlzdCIsInVuZGVmaW5lZCIsImNsYXNzZXMiLCJwdXNoIiwibGVuZ3RoIiwiam9pbiIsIndpZHRoIiwibWFwIiwibWVudSIsImluZGV4IiwiZ3JvdXBDYXB0aW9uIiwiZ3JvdXBzIiwibWVudUl0ZW0iLCJzdWJJbmRleCIsIm5hbWUiLCJ0eXBlIiwidXJsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUF5QkE7QUFDQTtBQUNBO0FBQ08sSUFBTUEsT0FBeUIsR0FBRyxRQUduQztBQUFBLE1BSG9DO0FBQ3hDQyxJQUFBQSxNQUFNLEdBQUcsVUFEK0I7QUFFeENDLElBQUFBLFFBQVEsR0FBRztBQUY2QixHQUdwQztBQUNKQSxFQUFBQSxRQUFRLEdBQUlBLFFBQVEsS0FBSyxJQUFiLElBQXFCQSxRQUFRLEtBQUtDLFNBQW5DLEdBQWdELEVBQWhELEdBQXFERCxRQUFoRTtBQUNBLE1BQU1FLE9BQU8sR0FBRyxDQUFDLFlBQUQsRUFBZSxZQUFmLEVBQTZCLHFCQUE3QixFQUFvRCxNQUFwRCxFQUE0RCxRQUE1RCxFQUFzRSxPQUF0RSxDQUFoQjs7QUFDQSxNQUFJSCxNQUFNLEtBQUssVUFBZixFQUEyQjtBQUN6QkcsSUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWEsV0FBYjtBQUNEOztBQUNELE1BQUlILFFBQVEsQ0FBQ0ksTUFBVCxHQUFrQixDQUF0QixFQUF5QjtBQUN2QixZQUFRTCxNQUFSO0FBQ0UsV0FBSyxVQUFMO0FBQ0VHLFFBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUFhLE1BQWI7QUFDQTs7QUFDRixXQUFLLE1BQUw7QUFDRUQsUUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWEsTUFBYixFQUFxQixhQUFyQjs7QUFDRjtBQUNFO0FBUEo7QUFTRDs7QUFDRCxzQkFDRTtBQUNFLElBQUEsU0FBUyxFQUFFRCxPQUFPLENBQUNHLElBQVIsQ0FBYSxHQUFiLENBRGI7QUFFRSxJQUFBLEtBQUssRUFBRTtBQUFDQyxNQUFBQSxLQUFLLEVBQUU7QUFBUjtBQUZULEtBS0lOLFFBQVEsQ0FBQ08sR0FBVCxDQUFhLENBQUNDLElBQUQsRUFBT0MsS0FBUCxLQUFpQjtBQUM1Qix3QkFBTztBQUFLLE1BQUEsU0FBUyxFQUFDLGFBQWY7QUFBNkIsTUFBQSxHQUFHLEVBQUVBO0FBQWxDLE9BRUZULFFBQVEsQ0FBQ0ksTUFBVCxHQUFrQixDQUFuQixpQkFDRTtBQUNFLE1BQUEsU0FBUztBQURYLE9BR0dJLElBQUksQ0FBQ0UsWUFIUixDQUhDLEVBV0hGLElBQUksQ0FBQ0csTUFBTCxDQUFZSixHQUFaLENBQWdCLENBQUNLLFFBQUQsRUFBV0MsUUFBWCxLQUF3QjtBQUN0QywwQkFBUSw2QkFBQywwQkFBRDtBQUFjLFFBQUEsT0FBTyxFQUFFRCxRQUFRLENBQUNFLElBQWhDO0FBQXNDLFFBQUEsSUFBSSxFQUFFRixRQUFRLENBQUNHLElBQVQsR0FBZ0JILFFBQVEsQ0FBQ0csSUFBekIsR0FBZ0MsU0FBNUU7QUFBdUYsUUFBQSxHQUFHLEVBQUVGLFFBQTVGO0FBQXNHLFFBQUEsU0FBUyxFQUFDLGFBQWhIO0FBQThILFFBQUEsSUFBSSxFQUFFRCxRQUFRLENBQUNJO0FBQTdJLFFBQVI7QUFDRCxLQUZELENBWEcsQ0FBUDtBQWdCRCxHQWpCRCxDQUxKLENBREY7QUEyQkQsQ0EvQ00iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHtGQywgSFRNTEF0dHJpYnV0ZXN9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHtQb3BVcE5hdkl0ZW0sIFBvcFVwTmF2SXRlbVByb3BzfSBmcm9tICcuL1BvcFVwTmF2SXRlbSdcblxuZXhwb3J0IGludGVyZmFjZSBNZW51SXRlbSB7XG4gIG5hbWU6IHN0cmluZ1xuICB1cmw6IHN0cmluZ1xuICB0eXBlPzogXCJkZWZhdWx0XCIgfCBcImhlYWRlclwiIHwgXCJidXR0b25cIlxufVxuXG5leHBvcnQgaW50ZXJmYWNlIE1lbnVUeXBlIHtcbiAgZ3JvdXBDYXB0aW9uOiBzdHJpbmdcbiAgZ3JvdXBzOiBNZW51SXRlbVtdXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTGlzdE5hdlByb3BzIGV4dGVuZHMgSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+IHtcblxuICAvKipcbiAgICogc3R5bGVcbiAgICovXG4gIHN0eWxlczogXCJlbGV2YXRlZFwiIHwgXCJmbGF0XCJcbiAgLyoqXG4gICAqIElmIGRhdGEgY29udGFpbnMgb25lLCBpdCB3aWxsIGJlIHNpbmdsZS4gSWYgZGF0YSBjb250YWlucyBtb3JlIHRoYW4gb25lLCBpdCB3aWxsIGJlIG11bHRpLiBBdCB0aGlzIHRpbWUsIGxhc3QgZWxlbWVudCB3aWxsIGJlIHRlcnRpYXJ5ICBidXR0b24uXG4gICAqL1xuICBsaW5rTGlzdDogTWVudVR5cGVbXVxufVxuXG4vKipcbiAqIFByaW1hcnkgVUkgY29tcG9uZW50IGZvciB1c2VyIGludGVyYWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBMaXN0TmF2OiBGQzxMaXN0TmF2UHJvcHM+ID0gKHtcbiAgc3R5bGVzID0gXCJlbGV2YXRlZFwiLFxuICBsaW5rTGlzdCA9IFtdXG59KSA9PiB7XG4gIGxpbmtMaXN0ID0gKGxpbmtMaXN0ID09PSBudWxsIHx8IGxpbmtMaXN0ID09PSB1bmRlZmluZWQpID8gW10gOiBsaW5rTGlzdFxuICBjb25zdCBjbGFzc2VzID0gWydyb3VuZGVkLWxnJywgJ2JnLWdyYXktNTAnLCAnZGFyazpiZy10cmFuc3BhcmVudCcsICdweC0zJywgJ3B5LTIuNScsICd3LW1heCddXG4gIGlmIChzdHlsZXMgPT09ICdlbGV2YXRlZCcpIHtcbiAgICBjbGFzc2VzLnB1c2goJ3NoYWRvdy1sZycpXG4gIH1cbiAgaWYgKGxpbmtMaXN0Lmxlbmd0aCA+IDEpIHtcbiAgICBzd2l0Y2ggKHN0eWxlcykge1xuICAgICAgY2FzZSAnZWxldmF0ZWQnOlxuICAgICAgICBjbGFzc2VzLnB1c2goJ2ZsZXgnKVxuICAgICAgICBicmVha1xuICAgICAgY2FzZSAnZmxhdCc6XG4gICAgICAgIGNsYXNzZXMucHVzaCgnZ3JpZCcsICdncmlkLWNvbHMtMicpXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBicmVha1xuICAgIH1cbiAgfVxuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGNsYXNzTmFtZT17Y2xhc3Nlcy5qb2luKCcgJyl9XG4gICAgICBzdHlsZT17e3dpZHRoOiAnZml0LWNvbnRlbnQnfX1cbiAgICA+XG4gICAgICB7XG4gICAgICAgIGxpbmtMaXN0Lm1hcCgobWVudSwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJtLTEuNSB3LW1heFwiIGtleT17aW5kZXh9ID5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgKGxpbmtMaXN0Lmxlbmd0aCA+IDEpICYmIChcbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2Bmb250LXNlbWlib2xkIHRleHQtc20gbGVhZGluZy01IHVwcGVyY2FzZSBweC0zIHB5LTIuNSBkYXJrOnRleHQtZ3JheS0xMDAgdGV4dC1ncmF5LTgwMGB9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAge21lbnUuZ3JvdXBDYXB0aW9ufVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG1lbnUuZ3JvdXBzLm1hcCgobWVudUl0ZW0sIHN1YkluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICg8UG9wVXBOYXZJdGVtIGNhcHRpb249e21lbnVJdGVtLm5hbWV9IHR5cGU9e21lbnVJdGVtLnR5cGUgPyBtZW51SXRlbS50eXBlIDogXCJkZWZhdWx0XCJ9IGtleT17c3ViSW5kZXh9IGNsYXNzTmFtZT0ncHgtMyBweS0yLjUnIGhyZWY9e21lbnVJdGVtLnVybH0gPjwvUG9wVXBOYXZJdGVtPilcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICA8L2Rpdj5cbiAgKVxufVxuIl19