"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MultiData = exports.SingleData = exports.default = void 0;

var _ListNav = require("./ListNav");

var _default = {
  title: 'Tjikko/nav/ListNav',
  component: _ListNav.ListNav,
  argTypes: {
    styles: {
      control: {
        type: "select",
        options: ["flat", "elevated"]
      }
    }
  },
  parameters: {
    componentSubtitle: 'The Buttons ListNav'
  }
};
exports.default = _default;

var Template = args => /*#__PURE__*/React.createElement(_ListNav.ListNav, args);

var SingleData = Template.bind({});
exports.SingleData = SingleData;
SingleData.args = {
  linkList: [{
    groupCaption: "Group 01",
    groups: [{
      name: "Link 01",
      url: "/linkURL"
    }, {
      name: "Link 02",
      url: "/linkURL"
    }, {
      name: "Link 03",
      url: "/linkURL",
      type: "button"
    }]
  }]
};
var MultiData = Template.bind({});
exports.MultiData = MultiData;
MultiData.args = {
  linkList: [{
    groupCaption: "Group 01",
    groups: [{
      name: "Link 01",
      url: "/linkURL"
    }, {
      name: "Link 02",
      url: "/linkURL"
    }, {
      name: "Link 03",
      url: "/linkURL",
      type: "button"
    }]
  }, {
    groupCaption: "Group 02",
    groups: [{
      name: "Link 01",
      url: "/linkURL"
    }, {
      name: "Link 02",
      url: "/linkURL"
    }, {
      name: "Link 03",
      url: "/linkURL"
    }]
  }, {
    groupCaption: "Group 03",
    groups: [{
      name: "Link 01",
      url: "/linkURL"
    }, {
      name: "Link 02",
      url: "/linkURL"
    }, {
      name: "Link 03",
      url: "/linkURL"
    }]
  }]
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2NvbXBvbmVudHMvbmF2L0xpc3ROYXYuc3Rvcmllcy50c3giXSwibmFtZXMiOlsidGl0bGUiLCJjb21wb25lbnQiLCJMaXN0TmF2IiwiYXJnVHlwZXMiLCJzdHlsZXMiLCJjb250cm9sIiwidHlwZSIsIm9wdGlvbnMiLCJwYXJhbWV0ZXJzIiwiY29tcG9uZW50U3VidGl0bGUiLCJUZW1wbGF0ZSIsImFyZ3MiLCJTaW5nbGVEYXRhIiwiYmluZCIsImxpbmtMaXN0IiwiZ3JvdXBDYXB0aW9uIiwiZ3JvdXBzIiwibmFtZSIsInVybCIsIk11bHRpRGF0YSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztlQUdlO0FBQ2JBLEVBQUFBLEtBQUssRUFBRSxvQkFETTtBQUViQyxFQUFBQSxTQUFTLEVBQUVDLGdCQUZFO0FBR2JDLEVBQUFBLFFBQVEsRUFBRTtBQUNSQyxJQUFBQSxNQUFNLEVBQUU7QUFBQ0MsTUFBQUEsT0FBTyxFQUFFO0FBQUNDLFFBQUFBLElBQUksRUFBRSxRQUFQO0FBQWlCQyxRQUFBQSxPQUFPLEVBQUUsQ0FBQyxNQUFELEVBQVMsVUFBVDtBQUExQjtBQUFWO0FBREEsR0FIRztBQU1iQyxFQUFBQSxVQUFVLEVBQUU7QUFDVkMsSUFBQUEsaUJBQWlCLEVBQUU7QUFEVDtBQU5DLEM7OztBQVdmLElBQU1DLFFBQTZCLEdBQUlDLElBQUQsaUJBQVUsb0JBQUMsZ0JBQUQsRUFBYUEsSUFBYixDQUFoRDs7QUFFTyxJQUFNQyxVQUFVLEdBQUdGLFFBQVEsQ0FBQ0csSUFBVCxDQUFjLEVBQWQsQ0FBbkI7O0FBQ1BELFVBQVUsQ0FBQ0QsSUFBWCxHQUFrQjtBQUNoQkcsRUFBQUEsUUFBUSxFQUNOLENBQ0U7QUFDRUMsSUFBQUEsWUFBWSxFQUFFLFVBRGhCO0FBRUVDLElBQUFBLE1BQU0sRUFBRSxDQUNOO0FBQ0VDLE1BQUFBLElBQUksRUFBRSxTQURSO0FBRUVDLE1BQUFBLEdBQUcsRUFBRTtBQUZQLEtBRE0sRUFLTjtBQUNFRCxNQUFBQSxJQUFJLEVBQUUsU0FEUjtBQUVFQyxNQUFBQSxHQUFHLEVBQUU7QUFGUCxLQUxNLEVBU047QUFDRUQsTUFBQUEsSUFBSSxFQUFFLFNBRFI7QUFFRUMsTUFBQUEsR0FBRyxFQUFFLFVBRlA7QUFHRVosTUFBQUEsSUFBSSxFQUFFO0FBSFIsS0FUTTtBQUZWLEdBREY7QUFGYyxDQUFsQjtBQXNCTyxJQUFNYSxTQUFTLEdBQUdULFFBQVEsQ0FBQ0csSUFBVCxDQUFjLEVBQWQsQ0FBbEI7O0FBQ1BNLFNBQVMsQ0FBQ1IsSUFBVixHQUFpQjtBQUNmRyxFQUFBQSxRQUFRLEVBQUUsQ0FDUjtBQUNFQyxJQUFBQSxZQUFZLEVBQUUsVUFEaEI7QUFFRUMsSUFBQUEsTUFBTSxFQUFFLENBQ047QUFDRUMsTUFBQUEsSUFBSSxFQUFFLFNBRFI7QUFFRUMsTUFBQUEsR0FBRyxFQUFFO0FBRlAsS0FETSxFQUtOO0FBQ0VELE1BQUFBLElBQUksRUFBRSxTQURSO0FBRUVDLE1BQUFBLEdBQUcsRUFBRTtBQUZQLEtBTE0sRUFTTjtBQUNFRCxNQUFBQSxJQUFJLEVBQUUsU0FEUjtBQUVFQyxNQUFBQSxHQUFHLEVBQUUsVUFGUDtBQUdFWixNQUFBQSxJQUFJLEVBQUU7QUFIUixLQVRNO0FBRlYsR0FEUSxFQW1CUjtBQUNFUyxJQUFBQSxZQUFZLEVBQUUsVUFEaEI7QUFFRUMsSUFBQUEsTUFBTSxFQUFFLENBQ047QUFDRUMsTUFBQUEsSUFBSSxFQUFFLFNBRFI7QUFFRUMsTUFBQUEsR0FBRyxFQUFFO0FBRlAsS0FETSxFQUtOO0FBQ0VELE1BQUFBLElBQUksRUFBRSxTQURSO0FBRUVDLE1BQUFBLEdBQUcsRUFBRTtBQUZQLEtBTE0sRUFTTjtBQUNFRCxNQUFBQSxJQUFJLEVBQUUsU0FEUjtBQUVFQyxNQUFBQSxHQUFHLEVBQUU7QUFGUCxLQVRNO0FBRlYsR0FuQlEsRUFvQ1I7QUFDRUgsSUFBQUEsWUFBWSxFQUFFLFVBRGhCO0FBRUVDLElBQUFBLE1BQU0sRUFBRSxDQUNOO0FBQ0VDLE1BQUFBLElBQUksRUFBRSxTQURSO0FBRUVDLE1BQUFBLEdBQUcsRUFBRTtBQUZQLEtBRE0sRUFLTjtBQUNFRCxNQUFBQSxJQUFJLEVBQUUsU0FEUjtBQUVFQyxNQUFBQSxHQUFHLEVBQUU7QUFGUCxLQUxNLEVBU047QUFDRUQsTUFBQUEsSUFBSSxFQUFFLFNBRFI7QUFFRUMsTUFBQUEsR0FBRyxFQUFFO0FBRlAsS0FUTTtBQUZWLEdBcENRO0FBREssQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0xpc3ROYXYsIExpc3ROYXZQcm9wc30gZnJvbSBcIi4vTGlzdE5hdlwiXG5pbXBvcnQge1N0b3J5LCBNZXRhfSBmcm9tICdAc3Rvcnlib29rL3JlYWN0L3R5cGVzLTYtMCdcblxuZXhwb3J0IGRlZmF1bHQge1xuICB0aXRsZTogJ1RqaWtrby9uYXYvTGlzdE5hdicsXG4gIGNvbXBvbmVudDogTGlzdE5hdixcbiAgYXJnVHlwZXM6IHtcbiAgICBzdHlsZXM6IHtjb250cm9sOiB7dHlwZTogXCJzZWxlY3RcIiwgb3B0aW9uczogW1wiZmxhdFwiLCBcImVsZXZhdGVkXCJdfX0sXG4gIH0sXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBjb21wb25lbnRTdWJ0aXRsZTogJ1RoZSBCdXR0b25zIExpc3ROYXYnXG4gIH1cbn0gYXMgTWV0YVxuXG5jb25zdCBUZW1wbGF0ZTogU3Rvcnk8TGlzdE5hdlByb3BzPiA9IChhcmdzKSA9PiA8TGlzdE5hdiB7Li4uYXJnc30gLz5cblxuZXhwb3J0IGNvbnN0IFNpbmdsZURhdGEgPSBUZW1wbGF0ZS5iaW5kKHt9KVxuU2luZ2xlRGF0YS5hcmdzID0ge1xuICBsaW5rTGlzdDpcbiAgICBbXG4gICAgICB7XG4gICAgICAgIGdyb3VwQ2FwdGlvbjogXCJHcm91cCAwMVwiLFxuICAgICAgICBncm91cHM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiBcIkxpbmsgMDFcIixcbiAgICAgICAgICAgIHVybDogXCIvbGlua1VSTFwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogXCJMaW5rIDAyXCIsXG4gICAgICAgICAgICB1cmw6IFwiL2xpbmtVUkxcIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6IFwiTGluayAwM1wiLFxuICAgICAgICAgICAgdXJsOiBcIi9saW5rVVJMXCIsXG4gICAgICAgICAgICB0eXBlOiBcImJ1dHRvblwiXG4gICAgICAgICAgfVxuICAgICAgICBdXG4gICAgICB9XVxufVxuZXhwb3J0IGNvbnN0IE11bHRpRGF0YSA9IFRlbXBsYXRlLmJpbmQoe30pXG5NdWx0aURhdGEuYXJncyA9IHtcbiAgbGlua0xpc3Q6IFtcbiAgICB7XG4gICAgICBncm91cENhcHRpb246IFwiR3JvdXAgMDFcIixcbiAgICAgIGdyb3VwczogW1xuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogXCJMaW5rIDAxXCIsXG4gICAgICAgICAgdXJsOiBcIi9saW5rVVJMXCIsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBcIkxpbmsgMDJcIixcbiAgICAgICAgICB1cmw6IFwiL2xpbmtVUkxcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogXCJMaW5rIDAzXCIsXG4gICAgICAgICAgdXJsOiBcIi9saW5rVVJMXCIsXG4gICAgICAgICAgdHlwZTogXCJidXR0b25cIlxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICBncm91cENhcHRpb246IFwiR3JvdXAgMDJcIixcbiAgICAgIGdyb3VwczogW1xuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogXCJMaW5rIDAxXCIsXG4gICAgICAgICAgdXJsOiBcIi9saW5rVVJMXCIsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBcIkxpbmsgMDJcIixcbiAgICAgICAgICB1cmw6IFwiL2xpbmtVUkxcIlxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogXCJMaW5rIDAzXCIsXG4gICAgICAgICAgdXJsOiBcIi9saW5rVVJMXCIsXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgIGdyb3VwQ2FwdGlvbjogXCJHcm91cCAwM1wiLFxuICAgICAgZ3JvdXBzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBcIkxpbmsgMDFcIixcbiAgICAgICAgICB1cmw6IFwiL2xpbmtVUkxcIixcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIG5hbWU6IFwiTGluayAwMlwiLFxuICAgICAgICAgIHVybDogXCIvbGlua1VSTFwiXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBcIkxpbmsgMDNcIixcbiAgICAgICAgICB1cmw6IFwiL2xpbmtVUkxcIixcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH1cbiAgXVxufVxuIl19