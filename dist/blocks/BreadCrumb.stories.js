"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Default = exports.default = void 0;

var _BreadCrumb = require("./BreadCrumb");

var _default = {
  title: 'Tjikko/blocks/BreadCrumb',
  component: _BreadCrumb.BreadCrumb,
  argTypes: {
    styles: {
      control: {
        type: 'select',
        options: ['fixed', 'responsive']
      }
    }
  },
  parameters: {
    componentSubtitle: 'The BreadCrumb'
  }
};
exports.default = _default;

var Template = _ref => {
  var {
    styles,
    crumblist
  } = _ref;
  return /*#__PURE__*/React.createElement(_BreadCrumb.BreadCrumb, {
    styles: styles,
    crumblist: crumblist
  });
};

var Default = Template.bind({});
exports.Default = Default;
Default.args = {
  styles: 'fixed',
  crumblist: [{
    name: 'breadcrumb',
    url: '/bread1'
  }, {
    name: 'breadcrumb',
    url: '/bread2'
  }, {
    name: 'breadcrumb',
    url: '/bread3'
  }]
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2NvbXBvbmVudHMvYmxvY2tzL0JyZWFkQ3J1bWIuc3Rvcmllcy50c3giXSwibmFtZXMiOlsidGl0bGUiLCJjb21wb25lbnQiLCJCcmVhZENydW1iIiwiYXJnVHlwZXMiLCJzdHlsZXMiLCJjb250cm9sIiwidHlwZSIsIm9wdGlvbnMiLCJwYXJhbWV0ZXJzIiwiY29tcG9uZW50U3VidGl0bGUiLCJUZW1wbGF0ZSIsImNydW1ibGlzdCIsIkRlZmF1bHQiLCJiaW5kIiwiYXJncyIsIm5hbWUiLCJ1cmwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7ZUFHZTtBQUNiQSxFQUFBQSxLQUFLLEVBQUUsMEJBRE07QUFFYkMsRUFBQUEsU0FBUyxFQUFFQyxzQkFGRTtBQUdiQyxFQUFBQSxRQUFRLEVBQUU7QUFDUkMsSUFBQUEsTUFBTSxFQUFFO0FBQUNDLE1BQUFBLE9BQU8sRUFBRTtBQUFDQyxRQUFBQSxJQUFJLEVBQUUsUUFBUDtBQUFpQkMsUUFBQUEsT0FBTyxFQUFFLENBQUMsT0FBRCxFQUFVLFlBQVY7QUFBMUI7QUFBVjtBQURBLEdBSEc7QUFNYkMsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZDLElBQUFBLGlCQUFpQixFQUFFO0FBRFQ7QUFOQyxDOzs7QUFXZixJQUFNQyxRQUFnQyxHQUFHO0FBQUEsTUFBQztBQUFDTixJQUFBQSxNQUFEO0FBQVNPLElBQUFBO0FBQVQsR0FBRDtBQUFBLHNCQUF5QixvQkFBQyxzQkFBRDtBQUFZLElBQUEsTUFBTSxFQUFFUCxNQUFwQjtBQUE0QixJQUFBLFNBQVMsRUFBRU87QUFBdkMsSUFBekI7QUFBQSxDQUF6Qzs7QUFFTyxJQUFNQyxPQUFPLEdBQUdGLFFBQVEsQ0FBQ0csSUFBVCxDQUFjLEVBQWQsQ0FBaEI7O0FBQ1BELE9BQU8sQ0FBQ0UsSUFBUixHQUFlO0FBQ2JWLEVBQUFBLE1BQU0sRUFBRSxPQURLO0FBRWJPLEVBQUFBLFNBQVMsRUFBRSxDQUNUO0FBQ0VJLElBQUFBLElBQUksRUFBRSxZQURSO0FBRUVDLElBQUFBLEdBQUcsRUFBRTtBQUZQLEdBRFMsRUFLVDtBQUNFRCxJQUFBQSxJQUFJLEVBQUUsWUFEUjtBQUVFQyxJQUFBQSxHQUFHLEVBQUU7QUFGUCxHQUxTLEVBU1Q7QUFDRUQsSUFBQUEsSUFBSSxFQUFFLFlBRFI7QUFFRUMsSUFBQUEsR0FBRyxFQUFFO0FBRlAsR0FUUztBQUZFLENBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0JyZWFkQ3J1bWIsIEJyZWFkQ3J1bWJQcm9wc30gZnJvbSAnLi9CcmVhZENydW1iJ1xuaW1wb3J0IHtTdG9yeSwgTWV0YX0gZnJvbSAnQHN0b3J5Ym9vay9yZWFjdC90eXBlcy02LTAnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgdGl0bGU6ICdUamlra28vYmxvY2tzL0JyZWFkQ3J1bWInLFxuICBjb21wb25lbnQ6IEJyZWFkQ3J1bWIsXG4gIGFyZ1R5cGVzOiB7XG4gICAgc3R5bGVzOiB7Y29udHJvbDoge3R5cGU6ICdzZWxlY3QnLCBvcHRpb25zOiBbJ2ZpeGVkJywgJ3Jlc3BvbnNpdmUnXX19XG4gIH0sXG4gIHBhcmFtZXRlcnM6IHtcbiAgICBjb21wb25lbnRTdWJ0aXRsZTogJ1RoZSBCcmVhZENydW1iJ1xuICB9XG59IGFzIE1ldGFcblxuY29uc3QgVGVtcGxhdGU6IFN0b3J5PEJyZWFkQ3J1bWJQcm9wcz4gPSAoe3N0eWxlcywgY3J1bWJsaXN0fSkgPT4gPEJyZWFkQ3J1bWIgc3R5bGVzPXtzdHlsZXN9IGNydW1ibGlzdD17Y3J1bWJsaXN0fSAvPlxuXG5leHBvcnQgY29uc3QgRGVmYXVsdCA9IFRlbXBsYXRlLmJpbmQoe30pXG5EZWZhdWx0LmFyZ3MgPSB7XG4gIHN0eWxlczogJ2ZpeGVkJyxcbiAgY3J1bWJsaXN0OiBbXG4gICAge1xuICAgICAgbmFtZTogJ2JyZWFkY3J1bWInLFxuICAgICAgdXJsOiAnL2JyZWFkMSdcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6ICdicmVhZGNydW1iJyxcbiAgICAgIHVybDogJy9icmVhZDInXG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiAnYnJlYWRjcnVtYicsXG4gICAgICB1cmw6ICcvYnJlYWQzJ1xuICAgIH1cbiAgXVxufVxuIl19